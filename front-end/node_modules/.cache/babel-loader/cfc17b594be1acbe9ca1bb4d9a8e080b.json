{"ast":null,"code":"import Config from \"backend/config.json\";\nimport Axios from \"axios\";\n/**\r\n * We use axios to create REST calls to our backend\r\n *\r\n * We have provided the login rest call for your\r\n * reference to build other rest calls with.\r\n *\r\n * This is an async function. Which means calling this function requires that\r\n * you \"chain\" it with a .then() function call.\r\n * <br>\r\n * What this means is when the function is called it will essentially do it \"in\r\n * another thread\" and when the action is done being executed it will do\r\n * whatever the logic in your \".then()\" function you chained to it\r\n * @example\r\n * login(request)\r\n * .then(response => alert(JSON.stringify(response.data, null, 2)));\r\n */\n\nasync function login(loginRequest) {\n  const requestBody = {\n    email: loginRequest.email,\n    password: loginRequest.password\n  };\n  const options = {\n    method: \"POST\",\n    // Method type (\"POST\", \"GET\", \"DELETE\", ect)\n    baseURL: Config.idmBaseUrl,\n    // Base URL (localhost:8081 for example)\n    url: Config.idm.login,\n    // Path of URL (\"/login\")\n    data: requestBody // Data to send in Body (The RequestBody to send)\n\n  };\n  return Axios.request(options);\n}\n\nasync function register(registerRequest) {\n  const requestBody = {\n    email: registerRequest.email,\n    password: registerRequest.password\n  };\n  const options = {\n    method: \"POST\",\n    baseURL: Config.baseUrl,\n    url: Config.idm.register,\n    data: requestBody\n  };\n  return Axios.request(options);\n}\n\nexport default {\n  login,\n  register\n};","map":{"version":3,"sources":["C:/Users/j00wa/Documents/CompSci 122B/fe2/src/backend/idm.js"],"names":["Config","Axios","login","loginRequest","requestBody","email","password","options","method","baseURL","idmBaseUrl","url","idm","data","request","register","registerRequest","baseUrl"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAeC,KAAf,CAAqBC,YAArB,EAAmC;AAC/B,QAAMC,WAAW,GAAG;AAChBC,IAAAA,KAAK,EAAEF,YAAY,CAACE,KADJ;AAEhBC,IAAAA,QAAQ,EAAEH,YAAY,CAACG;AAFP,GAApB;AAKA,QAAMC,OAAO,GAAG;AACZC,IAAAA,MAAM,EAAE,MADI;AACI;AAChBC,IAAAA,OAAO,EAAET,MAAM,CAACU,UAFJ;AAEgB;AAC5BC,IAAAA,GAAG,EAAEX,MAAM,CAACY,GAAP,CAAWV,KAHJ;AAGW;AACvBW,IAAAA,IAAI,EAAET,WAJM,CAIM;;AAJN,GAAhB;AAOA,SAAOH,KAAK,CAACa,OAAN,CAAcP,OAAd,CAAP;AACH;;AAED,eAAeQ,QAAf,CAAwBC,eAAxB,EAAyC;AACrC,QAAMZ,WAAW,GAAG;AAChBC,IAAAA,KAAK,EAAEW,eAAe,CAACX,KADP;AAEhBC,IAAAA,QAAQ,EAAEU,eAAe,CAACV;AAFV,GAApB;AAKA,QAAMC,OAAO,GAAG;AACZC,IAAAA,MAAM,EAAE,MADI;AAEZC,IAAAA,OAAO,EAAET,MAAM,CAACiB,OAFJ;AAGZN,IAAAA,GAAG,EAAEX,MAAM,CAACY,GAAP,CAAWG,QAHJ;AAIZF,IAAAA,IAAI,EAAET;AAJM,GAAhB;AAOA,SAAOH,KAAK,CAACa,OAAN,CAAcP,OAAd,CAAP;AACH;;AAED,eAAe;AACXL,EAAAA,KADW;AAEXa,EAAAA;AAFW,CAAf","sourcesContent":["import Config from \"backend/config.json\";\r\nimport Axios from \"axios\";\r\n\r\n\r\n/**\r\n * We use axios to create REST calls to our backend\r\n *\r\n * We have provided the login rest call for your\r\n * reference to build other rest calls with.\r\n *\r\n * This is an async function. Which means calling this function requires that\r\n * you \"chain\" it with a .then() function call.\r\n * <br>\r\n * What this means is when the function is called it will essentially do it \"in\r\n * another thread\" and when the action is done being executed it will do\r\n * whatever the logic in your \".then()\" function you chained to it\r\n * @example\r\n * login(request)\r\n * .then(response => alert(JSON.stringify(response.data, null, 2)));\r\n */\r\nasync function login(loginRequest) {\r\n    const requestBody = {\r\n        email: loginRequest.email,\r\n        password: loginRequest.password\r\n    };\r\n\r\n    const options = {\r\n        method: \"POST\", // Method type (\"POST\", \"GET\", \"DELETE\", ect)\r\n        baseURL: Config.idmBaseUrl, // Base URL (localhost:8081 for example)\r\n        url: Config.idm.login, // Path of URL (\"/login\")\r\n        data: requestBody // Data to send in Body (The RequestBody to send)\r\n    }\r\n\r\n    return Axios.request(options);\r\n}\r\n\r\nasync function register(registerRequest) {\r\n    const requestBody = {\r\n        email: registerRequest.email,\r\n        password: registerRequest.password\r\n    };\r\n\r\n    const options = {\r\n        method: \"POST\",\r\n        baseURL: Config.baseUrl,\r\n        url: Config.idm.register,\r\n        data: requestBody\r\n    }\r\n\r\n    return Axios.request(options);\r\n}\r\n\r\nexport default {\r\n    login,\r\n    register\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
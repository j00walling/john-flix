{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\j00wa\\\\Documents\\\\CompSci 122B\\\\fe2\\\\src\\\\pages\\\\MovieDetail.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Movies from \"backend/movies\";\nimport { useUser } from \"../hook/User\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Title = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n_c = Title;\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  max-width: 350px;\n`;\n_c2 = Column;\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 25px;\n  padding-top: 5px;\n`;\n_c3 = Row;\nconst Text = styled.div`\n  display: flex;\n  gap: .3rem;\n  text-align: center;\n`;\n_c4 = Text;\n\nconst MovieDetail = () => {\n  _s();\n\n  const {\n    accessToken\n  } = useUser();\n  const [movie, setMovie] = React.useState(0);\n  const [genres, setGenres] = React.useState(0);\n  const [persons, setPersons] = React.useState(0);\n  const {\n    movieId\n  } = useParams();\n\n  const getMovie = () => {\n    Movies.getMovieDetail({}, movieId, accessToken).then(response => {\n      setMovie(response.data.movie);\n      setGenres(response.data.genres);\n      setPersons(response.data.persons);\n      console.log(response.data.cast);\n    }).catch(error => alert(JSON.stringify(error.response.data, null, 2)));\n  };\n\n  useEffect(() => getMovie(), []);\n  return /*#__PURE__*/_jsxDEV(Title, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: movie.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://image.tmdb.org/t/p/w300\" + movie.posterPath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Year: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: movie.year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Director: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: movie.director\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"IMDB Rating: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [movie.rating, \"/10\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Cast: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Genre(s): \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), genres.map((genre, i) => /*#__PURE__*/_jsxDEV(Text, {\n            children: [\" \", i + 1 !== genres.length ? genre.name + `, ` : genre.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: movie.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MovieDetail, \"spJrk8LJIjnkSgC0U6aQsmUyvdE=\", false, function () {\n  return [useUser, useParams];\n});\n\n_c5 = MovieDetail;\nexport default MovieDetail;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Title\");\n$RefreshReg$(_c2, \"Column\");\n$RefreshReg$(_c3, \"Row\");\n$RefreshReg$(_c4, \"Text\");\n$RefreshReg$(_c5, \"MovieDetail\");","map":{"version":3,"sources":["C:/Users/j00wa/Documents/CompSci 122B/fe2/src/pages/MovieDetail.jsx"],"names":["React","useEffect","useState","styled","Movies","useUser","useParams","Title","div","Column","Row","Text","MovieDetail","accessToken","movie","setMovie","genres","setGenres","persons","setPersons","movieId","getMovie","getMovieDetail","then","response","data","console","log","cast","catch","error","alert","JSON","stringify","title","posterPath","year","director","rating","map","genre","i","length","name","overview"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,SAAQC,OAAR,QAAsB,cAAtB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;;AAEA,MAAMC,KAAK,GAAGJ,MAAM,CAACK,GAAI;AACzB;AACA;AACA;AACA,CAJA;KAAMD,K;AAMN,MAAME,MAAM,GAAGN,MAAM,CAACK,GAAI;AAC1B;AACA;AACA;AACA;AACA,CALA;MAAMC,M;AAON,MAAMC,GAAG,GAAGP,MAAM,CAACK,GAAI;AACvB;AACA;AACA;AACA;AACA,CALA;MAAME,G;AAON,MAAMC,IAAI,GAAGR,MAAM,CAACK,GAAI;AACxB;AACA;AACA;AACA,CAJA;MAAMG,I;;AAMN,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAM;AAAEC,IAAAA;AAAF,MAAkBR,OAAO,EAA/B;AACA,QAAM,CAAES,KAAF,EAASC,QAAT,IAAsBf,KAAK,CAACE,QAAN,CAAe,CAAf,CAA5B;AACA,QAAM,CAAEc,MAAF,EAAUC,SAAV,IAAwBjB,KAAK,CAACE,QAAN,CAAe,CAAf,CAA9B;AACA,QAAM,CAAEgB,OAAF,EAAWC,UAAX,IAA0BnB,KAAK,CAACE,QAAN,CAAe,CAAf,CAAhC;AACA,QAAM;AAAEkB,IAAAA;AAAF,MAAcd,SAAS,EAA7B;;AAEA,QAAMe,QAAQ,GAAG,MAAM;AACnBjB,IAAAA,MAAM,CAACkB,cAAP,CAAsB,EAAtB,EAA0BF,OAA1B,EAAmCP,WAAnC,EACKU,IADL,CACUC,QAAQ,IAAI;AACdT,MAAAA,QAAQ,CAACS,QAAQ,CAACC,IAAT,CAAcX,KAAf,CAAR;AACAG,MAAAA,SAAS,CAACO,QAAQ,CAACC,IAAT,CAAcT,MAAf,CAAT;AACAG,MAAAA,UAAU,CAACK,QAAQ,CAACC,IAAT,CAAcP,OAAf,CAAV;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACC,IAAT,CAAcG,IAA1B;AACH,KANL,EAOKC,KAPL,CAOWC,KAAK,IAAIC,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeH,KAAK,CAACN,QAAN,CAAeC,IAA9B,EAAoC,IAApC,EAA0C,CAA1C,CAAD,CAPzB;AASH,GAVD;;AAYAxB,EAAAA,SAAS,CAAC,MAAMoB,QAAQ,EAAf,EAAmB,EAAnB,CAAT;AAEA,sBACI,QAAC,KAAD;AAAA,4BACI;AAAA,gBAAKP,KAAK,CAACoB;AAAX;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII,QAAC,GAAD;AAAA,8BACI;AAAK,QAAA,GAAG,EAAE,oCAAoCpB,KAAK,CAACqB;AAApD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAA,gCACI,QAAC,IAAD;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAIrB,KAAK,CAACsB;AAAV;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI,QAAC,IAAD;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAItB,KAAK,CAACuB;AAAV;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eASI,QAAC,IAAD;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,uBAAIvB,KAAK,CAACwB,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ,eAaI,QAAC,IAAD;AAAA,iCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAbJ,eAmBI,QAAC,IAAD;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEKtB,MAAM,CAACuB,GAAP,CAAW,CAACC,KAAD,EAAQC,CAAR,kBACR,QAAC,IAAD;AAAA,4BAAQA,CAAC,GAAC,CAAF,KAAQzB,MAAM,CAAC0B,MAAf,GAAyBF,KAAK,CAACG,IAAN,GAAc,IAAvC,GAA8CH,KAAK,CAACG,IAA5D;AAAA;AAAA;AAAA;AAAA;AAAA,kBADH,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBJ,eAyBI;AAAA;AAAA;AAAA;AAAA,gBAzBJ,eA0BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1BJ,eA2BI;AAAA,oBAAI7B,KAAK,CAAC8B;AAAV;AAAA;AAAA;AAAA;AAAA,gBA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuCH,CA5DD;;GAAMhC,W;UACsBP,O,EAIJC,S;;;MALlBM,W;AA8DN,eAAeA,WAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Movies from \"backend/movies\";\r\nimport {useUser} from \"../hook/User\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nconst Title = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`\r\n\r\nconst Column = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n  max-width: 350px;\r\n`\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  gap: 25px;\r\n  padding-top: 5px;\r\n`\r\n\r\nconst Text = styled.div`\r\n  display: flex;\r\n  gap: .3rem;\r\n  text-align: center;\r\n`\r\n\r\nconst MovieDetail = () => {\r\n    const { accessToken } = useUser();\r\n    const [ movie, setMovie ] = React.useState(0);\r\n    const [ genres, setGenres ] = React.useState(0);\r\n    const [ persons, setPersons ] = React.useState(0);\r\n    const { movieId } = useParams();\r\n\r\n    const getMovie = () => {\r\n        Movies.getMovieDetail({}, movieId, accessToken)\r\n            .then(response => {\r\n                setMovie(response.data.movie);\r\n                setGenres(response.data.genres);\r\n                setPersons(response.data.persons);\r\n                console.log(response.data.cast);\r\n            })\r\n            .catch(error => alert(JSON.stringify(error.response.data, null, 2)))\r\n\r\n    }\r\n\r\n    useEffect(() => getMovie(), []);\r\n\r\n    return (\r\n        <Title >\r\n            <h1>{movie.title}</h1>\r\n            <br/>\r\n\r\n            <Row>\r\n                <img src={\"https://image.tmdb.org/t/p/w300\" + movie.posterPath} />\r\n                <Column>\r\n                    <Text>\r\n                        <h4>Year: </h4>\r\n                        <p>{movie.year}</p>\r\n                    </Text>\r\n                    <Text>\r\n                        <h4>Director: </h4>\r\n                        <p>{movie.director}</p>\r\n                    </Text>\r\n                    <Text>\r\n                        <h4>IMDB Rating: </h4>\r\n                        <p>{movie.rating}/10</p>\r\n                    </Text>\r\n                    <Text>\r\n                        <h4>Cast: </h4>\r\n                        {/*{persons.map((person, i) =>*/}\r\n                        {/*    <Text> {i+1 != 4 ? (person.name + `, `) : person.name}</Text>*/}\r\n                        {/*)}*/}\r\n                    </Text>\r\n                    <Text>\r\n                        <h4>Genre(s): </h4>\r\n                        {genres.map((genre, i) =>\r\n                            <Text> {i+1 !== genres.length ? (genre.name + `, `) : genre.name}</Text>\r\n                        )}\r\n                    </Text>\r\n                    <br/>\r\n                    <h4>Overview</h4>\r\n                    <p>{movie.overview}</p>\r\n                </Column>\r\n            </Row>\r\n        </Title>\r\n    );\r\n}\r\n\r\nexport default MovieDetail;"]},"metadata":{},"sourceType":"module"}